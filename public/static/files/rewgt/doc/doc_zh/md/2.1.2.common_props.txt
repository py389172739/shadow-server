2.1.2 几个通用属性
--------------------------

&nbsp;

Shadow Widget 对 inline 构件较少做附加处理，但对 block 布局的构件做了不少封装，提供面板类，导航类等若干构件。本节介绍非行内构件的几个通用属性，它们均被定义成双源属性，包括：   
&nbsp;&nbsp;&nbsp; `width, height, minWidth, maxWidth, minHeight, maxHeight, left, top, margin, borderWidth, padding`

#### 为什么要接管这些属性？

Shadow Widget 接管的这些属性，均可用 style.attr 的方式表示，它们被接管了，所以您应按 `component.duals.attr` 的方式使用，而不再按 style.attr 的方式使用。

接管的这些属性一方面让可视化界面设计成为可能，另一方面也让使用变简单，比如：

1) 取值、赋值等更简单

> 比如：`comp.duals.width = 100`，如果在 style 下得用 css 字串，如：`comp.duals.style = {width:'100px'};`

2) 避免构件布局定位时相互影响

> DOM 节点用 css 描述它的宽高，但其值并不包含 borderWidth 与 padding 值，导致相邻控件的布局与定位相互干扰。比如横向放置两个控件，各占 50% 宽度，当 borderWidth 与 padding 均设为 0 时，style.width = '50%' 是准确，但 borderWidth 或 padding 不为 0 且动态变化时，要经计算重置 style.width 才能让这两个控件准确占满 100% 宽度，否则总宽超出一丁点，第二个控件会非预期的被挪到下行。   
&nbsp;   
我们希望采用一种直接指定控件总宽、总高的布局方式，当控件总宽高未变时，borderWidth 或 padding 变化不干扰相邻控件的定位，下面我们将提出一套解决方案。

3) 让某些控件在宽高改变时，能触发 resizing 事件

#### 像素与百分比合一的宽高表达方式

width 与 height 的取值规则：
1. 取值为 null 或其它非 number 类型的数据时，表示 auto 宽高
2. 取值大于等于 0，且小于 0.9999 时，是百分比表达方式，比如 0.5 是 50%
3. 取值大于等于 0.9999，且小于1时，表示 100%
4. 取值大于等于 1 时，表示像素值，比如，100 表示 '100px'
5. 取值小于 0 时，剩余宽高的百分比，比如 -0.5 表示占用剩余宽（或高）的 50%，-1 表示占剩余量的 100%，-2 表示占剩余量的 200%

剩余宽高在 flex 布局（面板 Panel 下的各子成员按 flex 方式布局）时有效，系统先计算已指定宽（或高）的总量，得到剩余宽（或高）的像素值，余下各个指定负值宽（或高）的控件，均以剩余像素总值作参照来定宽度（或高度）。

比如某面板横向布局，它有3个子面板，分别占宽 0.5、0.3 和 -1，系统先算出剩余宽为总宽的 20%，然后分配给第 3 个控件 20% * 100% 宽度（即计算结果为总宽的 20%）。 

注意：
1. 计算剩余宽高时遭遇某个同级控件占用 auto 宽高，剩余宽高也随之变 auto，这导致负值宽高的计算被忽略。
2. 这里 width （或 height）的值是 style.width（或 style.heigth）加上 padding，再加上 borderWidth 的总值，也即，该控件所占空间的总宽（或总高）。
3. 负值宽（或高）只在 flex 布局的主轴同方向才有效，即：若指定负值宽，只有当前构件被横向布局时才有效，若指定负值高，只有当前构件被纵向布局时才有效。

#### 面板（Panel）控件的布局方式

Panel 控件采用 flex 方式布局，即采用 flex-direction、flex-wrap 等一系列 CSS3 规格实现布局。面板控件分两类，一类是子节点横向布局（如下左图），另一类是子节点纵向布局（如下右图），前者要求 klass 用 `row-reverse` （从左向右排列）或 `reverse-row`（从右向左排列），后者要求 klass 用 `col-reverse`（从上向下排列） 或 `reverse-col`（从下向上排列）。当这 4 者均未被 klass 指定时，Panel 缺省按 `row-reverse` 方式布局。

![横向与纵向布局](md/res/row_col_panel.png)

Panel 常用于大块版面的布局，通常在 W 树的根节点（即 `.body` 节点）下先放 Panel，然后再在 Panel 下放置 Div、P 等节点。当需横向与纵向有多层分割布局时，叠加数层 Panel 即可，至于各层选横向的 Panel，还是纵向的，视其子成员是横向排列，还是纵向排列来定。

Panel 另一个常用 klass 是 `default-wrap_reverse-nowrap`，该值指示 CSS 定义 `"flex-wrap: wrap"`（即自动换行），如果取值为 `nowrap-default-wrap_reverse` 则表示 `"flex-wrap: nowrap"` （即不换行）。

负值宽用在当前构件被横向排列时，负值高则用在纵向排列时，这两者当前构件的父构件都应为 Panel，使用负值时还通常让父构件采用不换行选项（即 `nowrap-default-wrap_reverse`），因为用尽剩余宽（或高）原本就有单行（或单列）使用的含义。

横向与纵向布局的样例见 demo3，访问 `http://localhost:3000/demo3/` 可查看运行效果。

#### 边界与填充宽度

margin、borderWidth、padding 的含义分别对应于 style.margin、style.borderWidth、style.padding，这 3 者取值格式相同，要求取 Array 或 number 值，其比如：

```
  <div $=Panel width='{100}' height='{100}' margin='{0}' border-width='{[1,2,1,2]}'></div>
```

若传 number 值 N，则等效于 `[N,N,N,N]`，若传 Array，一般要求用 4 个数值，依次分别表示上侧、右侧、下侧、左侧的取值，也可传含 2 个数值的 Array，如 `[N1,N2]`，等效于 `[N1,N2,N1,N2]`。

表示上、右、下、左的四个 N 值，既可以是像素值（值大于等于 1），也可以是当前构件总宽（即 width 属性）的百分比（值小于 1）。

#### left 与 top

left、top 的含义对应于 style.left 与 style.top，取值如果不是 number 类型（如 `null`），含义为 "auto"，如果值在 0 与 1 之间表示百分比，其它是像素值（可以是负值）。

取百分比时，left 以父构件的宽度为基准，top 则以父构件的高度为基准。

#### 宽高的最小与最大值

minWidth 与 maxWidth 用来限制构件的最小总宽与最大总宽，minHeight 与 maxHeight 则限制最小总高与最大总高，这 4 者取值若为 null，表示不作限制（即未应用），其它则表示指定像素值。

&nbsp;
